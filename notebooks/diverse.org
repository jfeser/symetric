#+PROPERTY: header-args:python :session P :results output
#+PROPERTY: header-args:bash :results output

#+begin_src python :var
  import io
  import pandas as pd
  import matplotlib.pyplot as plt

  n_bins=100
  header = [
      'synth', 'max_size', 'bench', 'n_states', 'n_distinct_states',
      'n_roots', 'time', 'sol_size', 'gold_size', 'n_args', 'total_arg_in_degree', ''
  ]

  df = pd.read_csv('diverse_results.csv', header=None, names=header)

  abs_10 = df[(df['bench'].str.contains('nprim_10')) & (df['synth'] == 'cad_abs')]
  conc_10 = df[(df['bench'].str.contains('nprim_10')) & (df['synth'] == 'cad_concrete')]
  abs_20 = df[(df['bench'].str.contains('nprim_20')) & (df['synth'] == 'cad_abs')]
  conc_20 = df[(df['bench'].str.contains('nprim_20')) & (df['synth'] == 'cad_concrete')]

  hist_kwargs = {'range': (0.0, 30000.0), 'density': True, 'histtype':'step', 'cumulative':True}
  fig, ax = plt.subplots(figsize=(8,4))
  ax.hist(abs_10['time'].fillna(float('inf')), n_bins, label='Abstract', **hist_kwargs)
  ax.hist(conc_10['time'].fillna(float('inf')), n_bins, label='Concrete', **hist_kwargs)
  ax.grid(True)
  ax.set_title('Random scenes of size 9 with 10 primitives')
  ax.set_ylabel('Likelihood')
  ax.set_xlabel('Runtime (ms)')
  ax.legend(loc='right')
  plt.savefig('merge_10prim.png')

  fig, ax = plt.subplots(figsize=(8,4))
  ax.hist(abs_20['time'].fillna(float('inf')), n_bins, label='Abstract', **hist_kwargs)
  ax.hist(conc_20['time'].fillna(float('inf')), n_bins, label='Concrete', **hist_kwargs)
  ax.grid(True)
  ax.set_title('Random scenes of size 9 with 20 primitives')
  ax.set_ylabel('Likelihood')
  ax.set_xlabel('Runtime (ms)')
  ax.legend(loc='right')
  plt.savefig('merge_20prim.png')
#+end_src

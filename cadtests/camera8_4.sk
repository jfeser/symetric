
        int NUM_DATA = 60;
float[NUM_DATA] xs = {-1.03641, 1.73151, 2.263, 0.132744, -4.12986, -4.90073, 8.55482, 1.89791, -3.53706, -1.10548, 3.42373, 4.2916, -2.67061, -4.51228, 0.289597, -3.08662, 3.77606, 1.90807, 0.082683, -2.99699, 0.458088, -3.9292, 2.26033, -3.04324, 0.53118, -4.37539, -2.86262, 0.345887, 0.461, -0.458898, -0.0525023, 1.12797, 1.88422, -4.8554, -2.05738, 0.732924, -1.94902, 2.8582, 2.45392, -1.94842, -1.93356, 1.91182, 1.70287, 0.28781, 1.93999, 0.680965, -4.46622, -0.739817, -0.469836, 10.7965, 1.9461, -2.56862, -2.90308, 1.67226, -3.78471, 1.14211, -2.68265, -0.678484, -3.10646, 1.74026};
float[NUM_DATA] ys = {18.4944, -4.82321, 12.685, 18.7003, 14.0858, 6.70071, -2.47747, 7.51462, 16.7834, 12.9741, 0.371181, 7.26353, 17.4257, 11.5084, -5.33124, -2.77385, 17.847, 15.8293, 19.6527, 6.61872, 10.5775, 7.68011, 11.802, -5.08139, 10.3199, 2.28839, 12.7452, 10.1617, 8.20601, 12.046, 10.0623, 7.12868, 5.5438, 6.9518, 4.48134, 3.57714, 6.87481, 6.58631, 8.87961, 6.18775, 0.746864, -1.68679, 5.71813, -3.38652, -2.23265, 6.0975, 7.28301, 1.26859, 3.16859, 6.92272, 7.75075, 11.9366, 0.213018, 5.23491, 6.64976, 3.9572, 1.29086, 6.81114, 9.71724, 4.10272};
float[NUM_DATA] zs = {1.7201, 8.8711, -3.73246, 11.7233, -0.415377, 9.05593, 10.0673, 0.313568, 9.85567, 11.671, 1.87746, 9.52638, 10.6336, 8.98329, -2.44979, 4.33863, 9.35962, -3.18694, 5.78435, 9.44033, 9.86682, 9.89509, 8.45184, 9.82689, 9.40649, 9.09879, 10.5875, 9.52846, 10.9336, 10.8005, -2.07638, 10.3408, 10.1107, 9.88246, 10.113, 10.1375, 9.11315, 11.0472, 9.51243, 7.97121, 12.7273, 11.7191, 8.73022, 10.9611, 10.9331, 8.50699, 6.8017, 15.6081, 10.9531, 4.47904, 8.51996, 8.01006, -3.05825, 0.0626514, 0.0999183, -2.21339, -0.359411, -1.53083, 8.2941, -0.847955};
bit[NUM_DATA] labels = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0};


        
generator bit getSphere(Vector p) {
	
	assert false;
	return false;
}
    

int numCuboidHints = 1;
CuboidHint[numCuboidHints] cuboidHints = {
        new CuboidHint(theta_x = -0.0, theta_y = -1.57079632679, theta_z = 0.0,
        	xlen = 10, ylen = 7, zlen = 11,
          	xlist = {10.0, 11.6, 10.88, 8.4, 5.0, 0.0, 2.4000000000000004, 9.1999999999999993, -21.0, 21.0}, 
		ylist = {7.2, 12.8, 10.0, 0.0, 17.0, -21.0, 21.0},
		zlist = {4.0, -2.0, 4.6, 4.0, 0.0, -7.0, 0.20000000000000001, 3.2000000000000006, -1.1999999999999993, -21.0, 21.0})};



int numCylinderHints = 7;
CylinderHint[numCylinderHints] cylinderHints = {
	new CylinderHint(theta_x = 0.0, theta_y = -0.0, theta_z = 0.0,
			radius = 3.2, y = 10.0, z = 5.0, xlen = 5,
			xlist = {-4.0, 2.0, -4.5999999999999996, -21.0, 21.0}), 

	new CylinderHint(theta_x = 0.0, theta_y = -1.57079632679, theta_z = 0.0,
			radius = 4.0, y = 0.0, z = 0.0, xlen = 6,
			xlist = {10.0, 11.6, 10.880000000000001, 8.4000000000000004, -21.0, 21.0}), 

	new CylinderHint(theta_x = 0.0, theta_y = -0.0, theta_z = 1.57079632679,
			radius = 8.0, y = -7.0, z = 2.4, xlen = 4,
			xlist = {7.2000000000000002, 12.800000000000001, -21.0, 21.0}), 

	new CylinderHint(theta_x = 0.0, theta_y = -1.57079632679, theta_z = 0.0,
			radius = 6.0, y = 10.0, z = 0.2, xlen = 6,
			xlist = {10.0, 11.6, 10.880000000000001, 8.4000000000000004, -21.0, 21.0}), 

	new CylinderHint(theta_x = 0.0, theta_y = -0.0, theta_z = 1.57079632679,
			radius = 0.8, y = 3.2, z = 9.2, xlen = 4,
			xlist = {7.2000000000000002, 12.800000000000001, -21.0, 21.0}), 

	new CylinderHint(theta_x = 0.0, theta_y = -1.57079632679, theta_z = 0.0,
			radius = 3.6, y = 0.0, z = 0.0, xlen = 6,
			xlist = {10.0, 11.6, 10.880000000000001, 8.4000000000000004, -21.0, 21.0}), 

	new CylinderHint(theta_x = 0.0, theta_y = 0.0, theta_z = 1.57079632679,
			radius = 0.8, y = -1.2, z = 9.2, xlen = 4,
			xlist = {7.2000000000000002, 12.800000000000001, -21.0, 21.0})};

        
        float DELTA = 0.1;
        
        #include "CSG_discrete2_bias2.skh"
        
        harness void main() {
        checkAll();
        }
        

        int NUM_DATA = 64;
float[NUM_DATA] xs = {2.12082, -0.715497, -11.7502, -2.55704, 6.70226, 12.6775, -9.12298, 5.12457, 8.55917, -14.8486, 12.8663, -6.06471, 2.73754, -2.29514, 4.92372, 11.0707, -14.2793, 4.31004, 1.27201, 8.39009, -12.6348, -10.1387, 7.72238, 13.2291, -1.51416, 13.2286, 13.3051, -8.10608, -12.7417, -2.74643, -6.74061, -13.2445, -5.22299, 2.12687, -2.73221, 7.66727, -10.1106, 5.84447, -8.43688, -2.42951, -2.89367, 2.23156, -0.736175, -9.50155, 0.569734, -2.72241, -7.39348, 0.081803, 6.74713, 0.517802, 2.58255, -7.26579, 1.19396, 2.76185, 3.807, 2.92366, -6.28988, 1.60081, 5.60323, 1.15401, 3.70961, -5.63827, 1.55002, 0.059384};
float[NUM_DATA] ys = {-8.16099, -5.68208, -1.92114, -4.49723, -2.02972, -9.00113, -14.7433, 8.33485, -17.4413, -11.5103, 13.1148, -5.53296, -6.65245, -13.6935, -2.34936, 12.2391, 8.24996, -18.9282, -5.94414, -10.3144, -19.2013, -1.56787, -11.3698, -4.47547, -17.1474, -19.8394, -1.61374, -0.60468, 17.3698, 8.28168, -2.46191, -17.4734, 6.9762, 4.77034, 5.76526, -1.60601, -0.169369, 9.38486, 15.4449, -3.70196, -5.10051, 13.5457, 2.23744, -0.443691, -3.48616, 11.5635, 12.672, 17.3093, 1.06738, 5.53116, 17.8642, 11.268, -3.50944, 18.2203, -4.60075, -0.740687, -1.66824, 8.42649, 18.0493, 12.5239, -3.64035, 2.39082, 13.4741, 7.21732};
float[NUM_DATA] zs = {8.31532, 21.8462, 22.1579, 23.6056, 20.6962, 19.9253, 10.243, 24.2307, 22.1356, 21.9333, 4.14592, 21.8978, 20.062, 19.5767, 20.254, 4.92276, 24.2702, 4.51173, 19.8511, -11.7714, 18.5977, 19.1969, 23.4494, 19.8873, 21.5561, 24.8307, 20.4772, 1.30191, 20.7677, -10.3987, 18.1588, 20.0872, -21.5984, -23.2641, -19.5392, -22.4146, -24.6511, -24.7658, -23.1365, -24.8733, -18.7067, -17.2729, -22.8642, -23.6052, -20.4596, -22.3934, -24.9032, -15.9846, -19.4227, -18.5108, -20.7288, -22.407, -18.4943, -16.1796, -24.4382, -23.5151, -23.0242, -24.6321, -17.6841, -14.8529, -22.874, -18.1977, -16.6883, -21.2488};
bit[NUM_DATA] labels = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0};


        
generator bit getSphere(Vector p) {
	
	assert false;
	return false;
}
    

int numCuboidHints = 1;
CuboidHint[numCuboidHints] cuboidHints = {
        new CuboidHint(theta_x = -0.0, theta_y = -1.57079632679, theta_z = 0.0,
        	xlen = 6, ylen = 5, zlen = 7,
          	xlist = {-22.0, -18.0, -20.0, -22.0, -30.0, 30.0}, 
		ylist = {17.0, 7.0, 1.5, -30.0, 30.0},
		zlist = {12.5, -12.5, -7.5, 7.5, -1.3471114790620886e-15, -30.0, 30.0})};



int numCylinderHints = 3;
CylinderHint[numCylinderHints] cylinderHints = {
	new CylinderHint(theta_x = 0.0, theta_y = -1.57079632679, theta_z = 0.0,
			radius = 6.0, y = 17.0, z = -1.34711147906e-15, xlen = 5,
			xlist = {-22.0, -18.0, -20.0, -30.0, 30.0}), 

	new CylinderHint(theta_x = 0.0, theta_y = -1.57079632679, theta_z = 0.0,
			radius = 12.5, y = 7.0, z = -1.34711147906e-15, xlen = 5,
			xlist = {-22.0, -18.0, -20.0, -30.0, 30.0}), 

	new CylinderHint(theta_x = 0.0, theta_y = -1.57079632679, theta_z = 0.0,
			radius = 7.5, y = 1.5, z = -1.34711147906e-15, xlen = 5,
			xlist = {-22.0, -18.0, -20.0, -30.0, 30.0})};
        
        float DELTA = 0.1;
        
        #include "CSG_discrete2_bias2.skh"
        
        harness void main() {
        checkAll();
        }
        